user www-data;
worker_processes  1;
error_log  /dev/stderr warn;
pid        /var/run/nginx.pid;

events {
    worker_connections  {{if env "WORKER_CONNECTIONS"}}{{env "WORKER_CONNECTIONS"}}{{else}}1024{{end}};
}

http {

  include mime.types;
  default_type application/octet-stream;
  sendfile on;
  keepalive_timeout {{if env "KEEPALIVE_TIMEOUT"}}{{env "KEEPALIVE_TIMEOUT"}}{{else}}65{{end}};
  log_format proxy_log '$remote_addr - $http_x_forwarded_for - $remote_user [$time_local] ' '"$request" $status $body_bytes_sent "$http_referer" ' '"$http_user_agent"' ;
  server_tokens off;

  {{if env "LDAP_URL"}}
  ldap_server ldapserver {
    url {{env "LDAP_URL"}};
    binddn {{env "LDAP_BINDDN"}};
    binddn_passwd {{env "LDAP_BINDDN_PASSWD"}};
    {{if env "LDAP_GROUP"}}
    group_attribute member;
    group_attribute_is_dn on;
    require group '{{env "LDAP_GROUP"}}';
    {{end}}
    require valid_user;
    satisfy all;
  }
  {{end}}

  server {
    server_name localhost;
    listen 80;
    error_log /dev/stderr;
    access_log /dev/stdout proxy_log;
    location / { return 503; }
    root /dev/null;

    listen 443 ssl;
    ssl_certificate /etc/nginx/ssl/ssl.cert;
    ssl_certificate_key /etc/nginx/ssl/ssl.key;
  }

  {{ range $service := services }}{{ if ne .Name "consul" }}
  upstream {{ $service.Name }} {

    {{ range $tag, $services := service .Name | byTag }}{{ if eq $tag "http" }}{{ range $services }}
    server {{ .Address }}:{{ .Port }}; {{ end }}{{ end }}{{ else }}   server 127.0.0.1:65535;{{ end }}

  }
  {{ end }}{{ end }}

  {{ range $service := services }}{{ if ne $service.Name "consul" }}
  server {
    listen 80;
    error_log /dev/stderr;
    access_log /dev/stdout proxy_log;
    root /dev/null;

    listen 443 ssl;
    ssl_certificate /etc/nginx/ssl/ssl.cert;
    ssl_certificate_key /etc/nginx/ssl/ssl.key;

    client_max_body_size 0;
    chunked_transfer_encoding on;

    {{ with $domains := printf "nginx/%s/domains" $service.Name | key }}{{ if $domains }}
    server_name {{ $domains }}; {{ end }}
    {{ else }}server_name "{{ $service.Name }}.{{if env "DOMAIN"}}{{env "DOMAIN"}}{{else}}dev{{end}}";{{ end }}

    {{ with $server_config := printf "nginx/%s/server_config" $service.Name | key }}
    {{ $server_config }}
    {{ end }}

    location / {
      {{if env "LDAP_URL"}}
      auth_ldap "restricted access";
      auth_ldap_servers ldapserver;
      {{end}}
      {{ with $server_config_location := printf "nginx/%s/server_config_location" $service.Name | key }}
      {{ $server_config_location }}
      {{ end }}
      proxy_pass http://{{ $service.Name }}/;
      proxy_set_header X-Real-IP  $remote_addr;
      proxy_set_header Host $http_host;
    }

  }{{ end }}{{ end }}

  upstream consul-ui {
    server {{if env "CONSUL"}}{{env "CONSUL"}}{{else}}127.0.0.1:8500{{end}};
  }
  server {
    listen 80;
    listen 443 ssl;
    ssl_certificate /etc/nginx/ssl/ssl.cert;
    ssl_certificate_key /etc/nginx/ssl/ssl.key;
    error_log /dev/stderr;
    access_log /dev/stdout proxy_log;
    server_name "consul-ui.{{if env "DOMAIN"}}{{env "DOMAIN"}}{{else}}dev{{end}}";
    {{ with $server_config := printf "nginx/consul/server_config" | key }}
      {{ $server_config }}
    {{ end }}
    location / {
      {{if env "LDAP_URL"}}
      auth_ldap "restricted access";
      auth_ldap_servers ldapserver;
      {{end}}
      proxy_pass http://consul-ui/;
      proxy_set_header X-Real-IP  $remote_addr;
      proxy_set_header Host $http_host;
    }
  }
}